buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}
apply plugin: 'com.google.protobuf'

group = 'by.dzikovskiy'
version = '0.0.1-SNAPSHOT'
description = 'usermicroservice'
sourceCompatibility = '11'
def grpcVersion = '1.29.0'

sourceSets {
    src {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/java'
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter:2.4.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.4.4'
    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.4.4'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.projectlombok:lombok'
    implementation'jakarta.xml.bind:jakarta.xml.bind-api'
    compile'io.jsonwebtoken:jjwt:0.9.0'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.apache.commons:commons-csv:1.8'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.4.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    runtimeOnly'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.4.4'
    testCompile "com.github.tomakehurst:wiremock-jre8:2.28.0"
    compile 'net.devh:grpc-client-spring-boot-starter:2.11.0.RELEASE'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

test {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.12.2'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}